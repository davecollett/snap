# Menu items for LINZ geodetic contractors...

###############################################################################
# 1) Create a SNAP job using MDFC and VECC files...

$_mdfc_test_file = ''
$_mdfc_test_result = false

function isMdfcFile( $filename )
    $header = ReadFile($filename,'.',1)
    if Match($header,'(?i)\ycode\y.*\yordv1\y.*\yordv2\y.*\yordv3\y') then
        return true
    endif
    return false 
end_function

function coordinateFileIsMdfc()
    if not $coordinate_file then
        return false
    endif
    if $_mdfc_test_file != $coordinate_file then
        $_mdfc_test_file = $coordinate_file
        $_mdfc_test_result = isMdfcFile($coordinate_file)
    endif
    return $_mdfc_test_result
end_function

function isVeccFile( $filename )
    $header = ReadFile($filename,'.',1)
    if Match($header,'(?i)\yfcode\y.*\ytcode\y.*\ydx\y.*\ydy\y.*\ydz\y') then
        return true
    endif
    return false 
end_function

function mdfcSnapFile( $mdfcfile, $type )
# type should be either 'f' for free or 'c' for constrained
    if $type == 'c' or $type == 'C' then $type='c' else $type='f' endif
    $snapadj =  Replace($mdfcfile,'(?i)^(.*[\\\/])?(\w\w)(\w+)\.csv$',"\\1\\2$type\\3.snp")
    if $snapadj == $mdfcfile then
        $snapadj = Replace($mdfcfile,'\w+\.\w+$','adjust_'.$type.'.snp')
    endif
    return $snapadj
end_function

function createContractAdjFile( $mdfcfile, $veccfile,$type )
    if $type == 'c' or $type == 'C' then $type='c' else $type='f' endif
    $snapadj = mdfcSnapFile( $mdfcfile,$type)

    $dir = FileName($mdfcfile,'path')
    if $dir == '' then $dir = '.' endif

    $mdfcfile = Filename($mdfcfile,'relative',$dir)
    $veccfile = Filename($veccfile,'relative',$dir)

    CopyTemplate('contractor.snp',$snapadj,
        "!mdfcfile!$mdfcfile!veccfile!$veccfile"
        )

    if $type == 'f' then
       $first = true
       foreach $line in ReadFile( $mdfcfile, '.', 2 ) do
           if $first then 
               $first = false
           else
               $code = Match($line,'\w+')
               AppendFile($snapadj,"\n! Minimal constraint - arbitrary fixed station\n\nfix $code\n")
               break
           endif
       endforeach
    else
       AppendFile($snapadj,"\n! Constrained by orders\n\n".
           "fix order=2k0\n".
           "fix order=2k1\n".
           "fix order=2k2\n".
           "fix order=2k3\n".
           "fix order=2k4\n"
           )
    endif
    return $snapadj
end_function

function createContractAdjustment()
    
    dialog "Create contract snap jobs"
    label "Creates SNAP command files to adjust contract MDFC and VECC files\n"
    open_file_selector $mdfcfile "MDFC mark file" "CSV files (*.csv)|*.csv|All files (*.*)|*.*"
    validator
       if not $mdfcfile then
          message("You must enter a MDFC file name","Input error")
          return false
       elseif not FileExists($mdfcfile) then
          message("The MDFC file does not exists","Input error")
          return false
       elseif not isMdfcFile($mdfcfile) then
          message("$mdfcfile is not a valid MDFC file","Input error")
          return false
       else
          $sf = mdfcSnapFile($crdfileoption)
          if FileExists($sf) then
            if not ask("The SNAP command files $sf already exists.\nDo you want to overwrite them","Overwrite?") then
               return false
             endif
          endif
       endif
       return true
    open_file_selector $veccfile "VECC vector file" "CSV files (*.csv)|*.csv|All files (*.*)|*.*"
    validator
       if not $veccfile then
          message("You must enter a VECC file name","Input error")
          return false
        elseif not FileExists($veccfile) then
          message("The VECC file does not exists","Input error")
          return false
        elseif not isVeccFile($veccfile) then
          message("$veccfile is not a valid VECC file","Input error")
          return false
       endif
       return true

    radio_selector $crdfileoption "Adjustment type" "~f~Minimally constrained~c~Constrained adjustment"

    validator
        $snapfile = createContractAdjFile( $mdfcfile, $veccfile, $crdfileoption )
        if not FileExists($snapfile) then
          message("Could not build command file $snapfile","File error")
          return false
        endif
        LoadJob($snapfile)
        return true
    end_dialog
end_function

function updateMdfcFileFromGdb()
    $perl = FindPerl()
    if not $perl then exit endif

    if not isMdfcFile($coordinate_file) then
        message("Coordinate file is not an MDFC file\n","File type error")
        return false
    endif
    $bakfile = SetExtension($coordinate_file,'~csv')
    CopyFile($coordinate_file,$bakfile)
    $newfile = SetExtension($coordinate_file,'new')
    DeleteFile($newfile)
    $command = "perl -S linz_gdb_stations.bat \"$coordinate_file\" \"$newfile\""
    $gdbresult=debuglogrun($command)
    log($gdbresult)
    if not FileExists($newfile) then
       Message("Unable to retrieve coordinates from the LINZ geodetic database\n$gdbresult","GDB error")
       return false
    endif
    RenameFile($newfile,$coordinate_file)
end_function

function updateMdfcFileFromAdjustment()
    $binfile = FindJobFile('bin')
    if not FileExists($binfile) then
        message("Cannot update MDFC file - no adjustment binary file","Error")
        return false
    endif
    $newfile = $coordinate_file
    $bakfile = ''
    if not Match($coordinate_file,'(?i)\.csv$') then 
        $newfile = SetExtension($newfile,'csv')
    endif
    if FileExists($newfile) then
        $bakfile = SetExtension($newfile,'~csv')
        CopyFile($newfile,$bakfile)
        DeleteFile($newfile)
    endif
    $output = debuglogrun("$snap_path/snaplist \"$binfile\" mdfc1 \"$newfile\"")
    if FileExists($newfile) then
        Log("The CSV file $newfile has been updated")
    else
        if $bakfile then Rename($bakfile,$newfile) endif
        Log("The CSV file could not be generated")
    endif
end_function

menu_item "&File|&Import|&Contract files" "Create an adjustment of contract MDFC and VECC files"
actions
    createContractAdjustment()
end_menu_item

menu_item "&Stations|&Update MDFC from GDB" "Update MDFC format coordinate file from the geodetic database"
requirements
    coordinateFileIsMdfc()
actions
    updateMdfcFileFromGdb()
end_menu_item

menu_item "&Adjust|&Update &MDFC coord file" "Update/create MDFC format coordinate file from adjusted coordinates"
requirements
    return $job_valid and FileExists(SetExtension($job_file,"bin"))
actions
    updateMdfcFileFromAdjustment()
end_menu_item
    


