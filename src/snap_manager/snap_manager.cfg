
############################################################################
# This script is when snap_manager is loaded..
# Configuration items used by the script

$startup_message =
"

                            Welcome to SNAP.

  Please note that this software is provided with no warranty - see Help |About
  for more information.

  Snap comprises a suite of programs for adjusting and analysing survey data.
  Most of these tools are accessed from the menus above.  

  To create a new SNAP job use the File | New option.  Note that you will need
  data files before you can create a job.  See the help file (Help | Help) for 
  more information about data files and formats.

"

$_perlexe =  FindProgram ( "perl.exe " )
$_commandshell = FindProgram("cmd.exe")
$_commandparams = " /F:ON /E:ON /K \"TITLE SNAP command window & CLS\""

$_debug = GetEnv("DEBUG_SNAP")

$_editor = GetConfig("editor")
if not $_editor then $_editor = FindProgram("notepad.exe") endif

#############################################################################
# NOTE: All menu actions implemented by functions to allow them to be
# replaced by local ocnfiguration.
#############################################################################
# File menu items 

menu_item "&File|&New" "Create a new SNAP job"
actions
   CreateNewSnapJob()
end_menu_item

menu_item "&File|&Open" "Open a SNAP job"
actions
   OpenSnapJob()
end_menu_item 

##############################################################################
#  Station menu .. 

menu_item "&Stations|&Edit station file" "Edit the station coordinate file"
requirements
    return $coordinate_file
actions
    EditCoordinateFile()
end_menu_item

#=============================

menu_item "&Stations|&Change coordinate system ..." "Change the coordinate system of the coordinate file"
requirements
    return $coordinate_file
actions
    ChangeCoordinateSystem()
end_menu_item

#=============================

menu_item "&Stations|Add &Geoid heights ..." "Add geoid heights to the coordinate file"
requirements
    return $coordinate_file
actions
    AddGeoidHeights()
end_menu_item
 

#=============================

menu_item "&Stations|&Calc missing stations ..." "Calculate coordinates of missing stations with dat2site"
requirements
    return $coordinate_file
actions
    CalculateMissingStations()
end_menu_item    

#=============================

menu_item "&Stations|&Import stations|&LINZ GDB ..." "Import coordinates from the LINZ Geodetic database"
requirements
    return $job_valid and $coordinate_file
actions
    ImportLINZGDB()
end_menu_item

#=============================

menu_item "&Stations|&Import stations|&Coordinate file ..." "Import coordinates from another station file"
requirements
    return $job_valid and $coordinate_file
actions
    ImportCoordFile()
end_menu_item

##############################################################################
#  Data file menu items 

menu_item "&Data|&Edit/view data files" "Edit or view data files"
requirements
    return $job_valid
actions
    DataFileDialog()
end_menu_item

##############################################################################
#  Adjust menu items 
menu_item "&Adjust|&Edit command file" "Edit the command file"
requirements
	return $job_valid
actions
    EditCommandFile()
end_menu_item

#=============================
	
menu_item "&Adjust|&Run adjustment" "Run SNAP adjustment"
requirements
   return $job_valid
actions
   RunAdjustment()
end_menu_item

#=============================

menu_item "&Adjust|&Plot adjustment" "View adjustment results in snapplot"
requirements
   return $job_valid
actions
   PlotAdjustment()
end_menu_item

#=============================

menu_item "&Adjust|&View report" "View the adjustment listing file"
requirements
   return $job_valid and FindJobFile("lst")
actions
   ViewAdjustmentListing()
end_menu_item

#=============================

menu_item "&Adjust|&View errors" "View the adjustment error report"
requirements
   return $job_valid and FindJobFile("err")
actions
   ViewAdjustmentErrorLog()
end_menu_item

#=============================

menu_item "&Adjust|&Update coordinates" "Update the station file with adjusted coordinates"
requirements
    return $job_valid and FileExists(SetExtension($coordinate_file,"new"))
actions
    UpdateAdjustmentCoordinates()
end_menu_item

#######################################################################
# Tools menu

menu_item "&Tools|Calculate &Orders ..." "Calculate station orders with snapspec"
requirements
   return $job_valid and  FindJobFile("bin")
actions
   CalculateCoordinateOrders()
end_menu_item   

#================================

menu_item "&Tools|&DOS window" "Open a DOS window in the job directory"
requirements
   return $_commandshell
actions
   RunCommandShell()
end_menu_item

#==================================================

menu_item "&Tools|C&lear log" "Clear log window"
actions
   ClearLogWindow()
end_menu_item

#==================================================

menu_item "&Tools|&Configuration" "SNAP manager configuration"
actions
   SetConfigurationOptions()
end_menu_item   

#==================================================

menu_item "&Tools|&Install" "Install a SNAP add-on package"
actions
   InstallSnapPackage()
end_menu_item   


#########################################################################
# Menu functions
#######################################################################

RunScript("utility.inc")
RunScript("jobfile.inc")
RunScript("crdfile.inc")
RunScript("datafile.inc")
RunScript("adjust.inc")
RunScript("tools.inc")

#########################################################################
# Run any local configuration, menus and then general configuration
# These are run after the function definitions
#########################################################################


foreach $scriptfile in Directory($script_path,"*_menu.cfg") do
   RunScript($scriptfile)
endforeach

RunScript("local.cfg")

if $user_path then
    $userscripts = Filename('script','relative',$user_path)
    if FileExists($userscripts) then
        $userlocal=Filename('local.cfg','relative',$userscripts)
        foreach $scriptfile in Directory($userscripts,"*_menu.cfg") do
            RunScript($scriptfile)
        endforeach
        if FileExists($userlocal) then
            RunScript($userlocal)
        endif
    endif
endif

# Display the startup message

Log($startup_message)
