#   Automatically generated grammar

.lang        "js" 
.getsym      "chr = this.buff.charAt(this.l++)"
.positioning "full"
.class       "myparser"

# Vocabulary

Lid:        /[a-zA-Z_][a-zA-Z_0-9]*/	{ @ = token; }
_skip:      /\/\/.*/
_skip:      /[\t\r\n ]+/    { continue; }
'(':		/\(/
')':		/\)/
'[':		/\[/
']':		/\]/

# Attributes

[]

# Grammar

input ::= 
	parentheses { dump("[good]"); };

parentheses ::= 
	parentheses parenthesis | parenthesis ;

parenthesis ::= 
	  '(' Lid ')'				{ dump( "in (): " + $1 ); }
	| '(' parentheses ')'
	| '[' Lid ']'				{ dump( "in []: " + $1 ); }
	| '[' parentheses ']' ;

%%

dump = alert;

function error(s) {
	dump(s);
}

function parse(string) {
	var p = new myparser();
	p.buff = string;
	p.l = 0;
//	p.DEBUG_syntax = 1;
	p.parse();
}
