#   Automatically generated grammar

.lang        "c"
.getsym      "chr = *l++;if( l == end ) fillb()"
.positioning "full"

# Vocabulary

Lid:        /[a-zA-Z_][a-zA-Z_0-9]*/
_skip:      /\/\/.*/
_skip:      /[\t\r\n ]+/    \ continue;

# Attributes

[]

# Grammar

input ::= Lid ;

%%

#define DEBUG_syntax

#include <stdlib.h>
#include <stdio.h>
#include <stdarg.h>
#include <string.h>


static char b[1025], *l, *end;
void error( char *r, ... );

int parse( void );
void fillb( void );

void error( char *r, ... )
{
    va_list arglist;
    va_start( arglist, r );
    vfprintf( stderr, r, arglist );
}


void fillb( void )
{
    int size = fread( b, 1, 1024, stdin );
    b[size] = 0; end = b + size; l = b;
}


int main( int argc, char *argv[] )
{
    int  i;
    char *input = "-";
    
    for( i = 1; i < argc; i++ ) {
        if( argv[i][0]!='-' || argv[i][1]==0 )
            input = argv[i];
    }

    if( input[0] != '-' || input[1] != 0 )
        if( !freopen( input, "r", stdin ) ) {
            perror( input );
            return 1;
        }

    fillb();
    parse();
    return 0;
}
